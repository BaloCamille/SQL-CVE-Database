#queries for CVE database

#pull the cve_id, cvss_score, and find the impact_level associated to that cvss
SELECT CVE.CVE_ID, IMPACT.IMPACT_LEVEL, CVE.CVSS_SCORE FROM CVE
JOIN IMPACT ON CVE.CVSS_SCORE BETWEEN IMPACT.CVSS_MIN AND
IMPACT.CVSS_MAX;

#pull the vulnerability type and the count of how many times it appears in the CVE table
SELECT CVE.VULN_TYPE, COUNT(*) AS TOTAL_COUNT FROM CVE JOIN
VULNERABILITY ON CVE.VULN_TYPE = VULNERABILITY.VULN_TYPE GROUP
BY CVE.VULN_TYPE ORDER BY TOTAL_COUNT DESC;

#pull the cve_id, impact_level, and the count of how many incidents are associated to that cve
SELECT CVE.CVE_ID, IMPACT.IMPACT_LEVEL, COUNT(INCIDENT_ID) AS
INCIDENT_COUNT FROM CVE JOIN INCIDENT ON CVE.CVE_ID =
INCIDENT.CVE_ID JOIN IMPACT ON CVE.CVSS_SCORE BETWEEN
IMPACT.CVSS_MIN AND IMPACT.CVSS_MAX WHERE CVE.PATCH_AVAILABLE
= TRUE GROUP BY CVE.CVE_ID, IMPACT.IMPACT_LEVEL ORDER BY
INCIDENT_COUNT DESC;

#pull the product and how many incidents are assoicated to that product
SELECT PRODCT.PRODUCT_NAME, COUNT(INCIDENT_ID) AS
INCIDENT_COUNT FROM PRODUCT JOIN INCIDENT ON
PRODUCT.PRODUCT_NAME = INCIDENT.PRODUCT_NAME GROUP BY
PRODUCT.PRODUCT_NAME ORDER BY INCIDENT_COUNT DESC;

#pull all the products that have an EOL year as 'TBD' and their corresponding vendor
SELECT PRODUCT.PRODUCT_NAME, PRODUCT.VENDOR_NAME FROM
PRODUCT JOIN VENDOR ON PRODUCT.VENDOR_NAME =
VENDOR.VENDOR_NAME WHERE PRODUCT.PRODUCT_EOL_YEAR = ‘TBD’
ORDER BY VENDOR.VENDOR_NAME;

#pull the cve_id and its vulnerability type if that vulnerability type is on the OWASP Top 10
SELECT CVE.CVE_ID, VULNERABILITY.VULNERABILITY_TYPE FROM CVE
JOIN VULNERABILITY ON CVE.VULN_TYPE = VULNERABILITY.VULN_TYPE
WHERE VULNERABILITY.OWASP_10 = TRUE ORDER BY VULN_TYPE;

#pull the cve_id, cvss score, and incident count if the incident count is >= 2
SELECT CVE.CVE_ID, CVE.CVSS_SCORE, COUNT(INCIDENT.INCIDENT_ID) AS
INCIDENT_COUNT FROM CVE JOIN INCIDENT ON CVE.CVE_ID =
INCIDENT.CVE_ID GROUP BY CVE.CVE_ID, CVE.CVSS_SCORE
HAVING COUNT(INCIDENT.INCIDENT_ID) >= 2 ORDER BY
INCIDENT_COUNT DESC;

#pull the vulnerability type, its average cvss score, and how many cves have a vulnerability type as that
SELECT CVE.VULN_TYPE, AVG(CVE.CVSS_SCORE) AS AVG_CVSS_SCORE,
COUNT(CVE.CVE_ID) AS CVE_COUNT FROM CVE GROUP BY CVE.VULN_TYPE
ORDER BY AVG_CVSS_SCORE DESC;

#pull the vulnerability type, its description, and the max cvss score found with that corresponding type
SELECT CVE.VULN_TYPE, VULNERABILITY.VULN_DESCRIPTION,
MAX(CVE.CVSS_SCORE) AS MAX_CVSS_SCORE FROM CVE
JOIN VULNERABILITY ON CVE.VULN_TYPE = VULNERABILITY.VULN_TYPE
GROUP BY CVE.VULN_TYPE ORDER BY MAX_CVSS_SCORE DESC;

#pull the product, vendor, and incident count if the incident count is >= 3
SELECT PRODUCT.PRODUCT_NAME, VENDOR.VENDOR_NAME,
COUNT(INCIDENT.INCIDENT_ID) AS INCIDENT_COUNT FROM PRODUCT
JOIN VENDOR ON PRODUCT.VENDOR_NAME = VENDOR.VENDOR_NAME
JOIN INCIDENT ON PRODUCT.PRODUCT_NAME =
INCIDENT.PRODUCT_NAME GROUP BY PRODUCT.PRODUCT_NAME,
VENDOR.VENDOR_NAME HAVING INCIDENT_COUNT >= 3;